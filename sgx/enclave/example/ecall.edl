enclave {
    from "sgx_tprotected_fs.edl" import *;
    include "sgx_tprotected_fs.h"
    trusted {
        public void decryptMessage(
	    [in,size=len] char *encMessageIn, 
	    size_t len, 
	    [out,size=lenOut] char *decMessageOut, 
	    size_t lenOut);

	public void encryptMessage(
	    [in,size=len] char *decMessageIn, 
	    size_t len, 
	    [out,size=lenOut] char *encMessageOut, 
	    size_t lenOut);

        public int setup_model([in, string] const char *model_name);

        public int seal_data(
                                     size_t in_size,
            [in, size=in_size]       const void *input,
                                     size_t max_out_size,
            [out, size=max_out_size] void *results,
            [out]                    size_t *result_size
        );

        public int unseal_data(
                                     size_t in_size,
            [in, size=in_size]       const void *input,
                                     size_t max_out_size,
            [out, size=max_out_size] void *results,
            [out]                    size_t *result_size
        );

        public int enc_infer(
            [in, string]             const char *input_filename, 
            [in, string]             const char *output_filename
        );

        public int infer(
                                     size_t in_size,
            [in, size=in_size]       const void *input,
                                     size_t max_out_size,
            [out, size=max_out_size] void *results,
            [out]                    size_t *result_size
        );
    };
};
